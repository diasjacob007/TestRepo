{"remainingRequest":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/jwt-decode/lib/base64_url_decode.js","dependencies":[{"path":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/jwt-decode/lib/base64_url_decode.js","mtime":1544614851435},{"path":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1544614850991},{"path":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1544614850259}],"contextDependencies":[],"result":["var atob = require('./atob');\n\nfunction b64DecodeUnicode(str) {\n  return decodeURIComponent(atob(str).replace(/(.)/g, function (m, p) {\n    var code = p.charCodeAt(0).toString(16).toUpperCase();\n    if (code.length < 2) {\n      code = '0' + code;\n    }\n    return '%' + code;\n  }));\n}\n\nmodule.exports = function(str) {\n  var output = str.replace(/-/g, \"+\").replace(/_/g, \"/\");\n  switch (output.length % 4) {\n    case 0:\n      break;\n    case 2:\n      output += \"==\";\n      break;\n    case 3:\n      output += \"=\";\n      break;\n    default:\n      throw \"Illegal base64url string!\";\n  }\n\n  try{\n    return b64DecodeUnicode(output);\n  } catch (err) {\n    return atob(output);\n  }\n};\n",null]}