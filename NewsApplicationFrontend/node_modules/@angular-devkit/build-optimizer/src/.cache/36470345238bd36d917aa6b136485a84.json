{"remainingRequest":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/jwt-decode/lib/index.js","dependencies":[{"path":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/jwt-decode/lib/index.js","mtime":1544614851435},{"path":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/cache-loader/dist/cjs.js","mtime":1544614850991},{"path":"/home/ubuntu/javastack-devsetup/Full Stack Engineer/SBA/NewsApplication-Java-BoilerPlate/NewsApplicationFrontend/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1544614850259}],"contextDependencies":[],"result":["'use strict';\n\nvar base64_url_decode = require('./base64_url_decode');\n\nfunction InvalidTokenError(message) {\n  this.message = message;\n}\n\nInvalidTokenError.prototype = new Error();\nInvalidTokenError.prototype.name = 'InvalidTokenError';\n\nmodule.exports = function (token,options) {\n  if (typeof token !== 'string') {\n    throw new InvalidTokenError('Invalid token specified');\n  }\n\n  options = options || {};\n  var pos = options.header === true ? 0 : 1;\n  try {\n    return JSON.parse(base64_url_decode(token.split('.')[pos]));\n  } catch (e) {\n    throw new InvalidTokenError('Invalid token specified: ' + e.message);\n  }\n};\n\nmodule.exports.InvalidTokenError = InvalidTokenError;\n",null]}